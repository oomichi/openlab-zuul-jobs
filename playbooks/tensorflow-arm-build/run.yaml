- hosts: all
  tasks:
    - name: Install the necessary libraries via apt
      become: true
      shell: |
        apt update && \
        apt install -y build-essential \
        openjdk-8-jdk \
        python \
        zip \
        unzip \
        gcc \
        python3 \
        python3-dev \
        python3-pip \
        libhdf5-serial-dev \
        git \
        pkg-config \
        wget \
        sudo
      args:
        executable: /bin/bash

    - name: Install higher version cmake and gcc
      become: true
      shell: |
        set -ex
        apt update && \
        apt install libgmp-dev libmpfr-dev libmpc-dev -y
        cd && \
        wget https://cmake.org/files/v3.5/cmake-3.5.2.tar.gz && \
        tar -zxvf cmake-3.5.2.tar.gz && \
        cd cmake-3.5.2 && \
        ./bootstrap && \
        make && \
        make install && \
        cmake --version && \
        which cmake
        cd && \
        wget https://mirrors.tuna.tsinghua.edu.cn/gnu/gcc/gcc-9.2.0/gcc-9.2.0.tar.gz && \
        tar -xvf gcc-9.2.0.tar.gz && \
        cd gcc-9.2.0 && \
        ./configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --enable-bootstrap && \
        make -j 96 && \
        make install && \
        gcc -v && \
        which gcc
      args:
        executable: /bin/bash

    - name: Install bazel 3.1.0
      become: true
      shell: |
        set -ex
        cd
        wget https://github.com/bazelbuild/bazel/releases/download/3.1.0/bazel-3.1.0-dist.zip
        mkdir bazel
        unzip bazel-3.1.0-dist.zip -d bazel
        cd bazel
        EXTRA_BAZEL_ARGS='--host_javabase=@local_jdk//:jdk' ./compile.sh
        ln -s `pwd`/output/bazel /usr/bin/bazel
        export PATH=$PATH:/usr/bin/
        which bazel
      args:
        executable: /bin/bash

    - name: Install pip deps on system cmd
      become: true
      shell: |
        pip3 install virtualenv
      args:
        executable: /bin/bash

    - name: Install pip deps via user account
      shell: |
        pip3 install cython
        pip3 install numpy future keras_preprocessing mock
      args:
        executable: /bin/bash

    - name: Build Tensorflow master
      shell: |
        set -xe
        export PATH=$PATH:/usr/bin/
        virtualenv --python=python3.6 ~/.env/tensorflow/
        source ~/.env/tensorflow/bin/activate
        cat << EOF > input


        n
        n
        n
        n
        n
        n

        n

        EOF
        ./configure < ./input
        pip3 install numpy keras_preprocessing
        bazel clean --expunge
        bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package
        mkdir tensorflow-pkg
        bazel-bin/tensorflow/tools/pip_package/build_pip_package ./tensorflow-pkg
      args:
        executable: /bin/bash

    - name: Verify Tensorflow whl package
      shell: |
        set -xe
        cd tensorflow-pkg
        pip3 install tensorflow-*.whl
        python3 -c "import tensorflow as tf; print(tf.__version__)"
      args:
        executable: /bin/bash
